// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// OnCallType on call type
// swagger:model OnCallType
type OnCallType string

const (

	// OnCallTypeUser captures enum value "user"
	OnCallTypeUser OnCallType = "user"

	// OnCallTypeRotationGroup captures enum value "rotation_group"
	OnCallTypeRotationGroup OnCallType = "rotation_group"

	// OnCallTypeRotationGroupNext captures enum value "rotation_group_next"
	OnCallTypeRotationGroupNext OnCallType = "rotation_group_next"

	// OnCallTypeRotationGroupPrevious captures enum value "rotation_group_previous"
	OnCallTypeRotationGroupPrevious OnCallType = "rotation_group_previous"

	// OnCallTypeTeam captures enum value "team"
	OnCallTypeTeam OnCallType = "team"

	// OnCallTypeTeamRouting captures enum value "team_routing"
	OnCallTypeTeamRouting OnCallType = "team_routing"

	// OnCallTypeWebhook captures enum value "webhook"
	OnCallTypeWebhook OnCallType = "webhook"

	// OnCallTypeEmail captures enum value "email"
	OnCallTypeEmail OnCallType = "email"

	// OnCallTypePolicyRouting captures enum value "policy_routing"
	OnCallTypePolicyRouting OnCallType = "policy_routing"
)

// for schema
var onCallTypeEnum []interface{}

func init() {
	var res []OnCallType
	if err := json.Unmarshal([]byte(`["user","rotation_group","rotation_group_next","rotation_group_previous","team","team_routing","webhook","email","policy_routing"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		onCallTypeEnum = append(onCallTypeEnum, v)
	}
}

func (m OnCallType) validateOnCallTypeEnum(path, location string, value OnCallType) error {
	if err := validate.Enum(path, location, value, onCallTypeEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this on call type
func (m OnCallType) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateOnCallTypeEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
