// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// OnCallOverride on call override
// swagger:model OnCallOverride
type OnCallOverride struct {

	// The override end time (ISO 8601)
	End string `json:"end,omitempty"`

	// orig on call user
	OrigOnCallUser *User `json:"origOnCallUser,omitempty"`

	// override on call user
	OverrideOnCallUser *User `json:"overrideOnCallUser,omitempty"`

	// The override start time (ISO 8601)
	Start string `json:"start,omitempty"`
}

// Validate validates this on call override
func (m *OnCallOverride) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateOrigOnCallUser(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateOverrideOnCallUser(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *OnCallOverride) validateOrigOnCallUser(formats strfmt.Registry) error {

	if swag.IsZero(m.OrigOnCallUser) { // not required
		return nil
	}

	if m.OrigOnCallUser != nil {
		if err := m.OrigOnCallUser.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("origOnCallUser")
			}
			return err
		}
	}

	return nil
}

func (m *OnCallOverride) validateOverrideOnCallUser(formats strfmt.Registry) error {

	if swag.IsZero(m.OverrideOnCallUser) { // not required
		return nil
	}

	if m.OverrideOnCallUser != nil {
		if err := m.OverrideOnCallUser.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("overrideOnCallUser")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (m *OnCallOverride) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *OnCallOverride) UnmarshalBinary(b []byte) error {
	var res OnCallOverride
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
