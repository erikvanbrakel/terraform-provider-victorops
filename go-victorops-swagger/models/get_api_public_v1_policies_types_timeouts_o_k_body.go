// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
)

// GetAPIPublicV1PoliciesTypesTimeoutsOKBody get Api public v1 policies types timeouts o k body
// swagger:model getApiPublicV1PoliciesTypesTimeoutsOKBody
type GetAPIPublicV1PoliciesTypesTimeoutsOKBody struct {

	// self Url
	SelfURL string `json:"_selfUrl,omitempty"`

	// timeout types
	TimeoutTypes []*TimeoutObject `json:"timeoutTypes"`
}

// Validate validates this get Api public v1 policies types timeouts o k body
func (m *GetAPIPublicV1PoliciesTypesTimeoutsOKBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateTimeoutTypes(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *GetAPIPublicV1PoliciesTypesTimeoutsOKBody) validateTimeoutTypes(formats strfmt.Registry) error {

	if swag.IsZero(m.TimeoutTypes) { // not required
		return nil
	}

	for i := 0; i < len(m.TimeoutTypes); i++ {
		if swag.IsZero(m.TimeoutTypes[i]) { // not required
			continue
		}

		if m.TimeoutTypes[i] != nil {
			if err := m.TimeoutTypes[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("timeoutTypes" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}

// MarshalBinary interface implementation
func (m *GetAPIPublicV1PoliciesTypesTimeoutsOKBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *GetAPIPublicV1PoliciesTypesTimeoutsOKBody) UnmarshalBinary(b []byte) error {
	var res GetAPIPublicV1PoliciesTypesTimeoutsOKBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
