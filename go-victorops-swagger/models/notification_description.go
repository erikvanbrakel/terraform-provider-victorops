// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/validate"
)

// NotificationDescription notification description
// swagger:model NotificationDescription
type NotificationDescription string

const (

	// NotificationDescriptionSendAPushNotificationToAllMyDevices captures enum value "Send a push notification to all my devices"
	NotificationDescriptionSendAPushNotificationToAllMyDevices NotificationDescription = "Send a push notification to all my devices"

	// NotificationDescriptionSendAnEmailToAnEmailAddress captures enum value "Send an email to an email address"
	NotificationDescriptionSendAnEmailToAnEmailAddress NotificationDescription = "Send an email to an email address"

	// NotificationDescriptionSendAnSMSToAPhoneNumber captures enum value "Send an SMS to a phone number"
	NotificationDescriptionSendAnSMSToAPhoneNumber NotificationDescription = "Send an SMS to a phone number"

	// NotificationDescriptionMakeAPhoneCallToAPhoneNumber captures enum value "Make a phone call to a phone number"
	NotificationDescriptionMakeAPhoneCallToAPhoneNumber NotificationDescription = "Make a phone call to a phone number"
)

// for schema
var notificationDescriptionEnum []interface{}

func init() {
	var res []NotificationDescription
	if err := json.Unmarshal([]byte(`["Send a push notification to all my devices","Send an email to an email address","Send an SMS to a phone number","Make a phone call to a phone number"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		notificationDescriptionEnum = append(notificationDescriptionEnum, v)
	}
}

func (m NotificationDescription) validateNotificationDescriptionEnum(path, location string, value NotificationDescription) error {
	if err := validate.Enum(path, location, value, notificationDescriptionEnum); err != nil {
		return err
	}
	return nil
}

// Validate validates this notification description
func (m NotificationDescription) Validate(formats strfmt.Registry) error {
	var res []error

	// value enum
	if err := m.validateNotificationDescriptionEnum("", "body", m); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
