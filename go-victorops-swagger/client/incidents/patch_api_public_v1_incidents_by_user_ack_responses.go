// Code generated by go-swagger; DO NOT EDIT.

package incidents

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/erikvanbrakel/terraform-provider-victorops/go-victorops-swagger/models"
)

// PatchAPIPublicV1IncidentsByUserAckReader is a Reader for the PatchAPIPublicV1IncidentsByUserAck structure.
type PatchAPIPublicV1IncidentsByUserAckReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchAPIPublicV1IncidentsByUserAckReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchAPIPublicV1IncidentsByUserAckOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchAPIPublicV1IncidentsByUserAckBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPatchAPIPublicV1IncidentsByUserAckUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPatchAPIPublicV1IncidentsByUserAckForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchAPIPublicV1IncidentsByUserAckNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPatchAPIPublicV1IncidentsByUserAckInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchAPIPublicV1IncidentsByUserAckOK creates a PatchAPIPublicV1IncidentsByUserAckOK with default headers values
func NewPatchAPIPublicV1IncidentsByUserAckOK() *PatchAPIPublicV1IncidentsByUserAckOK {
	return &PatchAPIPublicV1IncidentsByUserAckOK{}
}

/*PatchAPIPublicV1IncidentsByUserAckOK handles this case with default header values.

The result of each acknowledge incident action.
*/
type PatchAPIPublicV1IncidentsByUserAckOK struct {
	Payload *models.AckOrResolveResponse
}

func (o *PatchAPIPublicV1IncidentsByUserAckOK) Error() string {
	return fmt.Sprintf("[PATCH /api-public/v1/incidents/byUser/ack][%d] patchApiPublicV1IncidentsByUserAckOK  %+v", 200, o.Payload)
}

func (o *PatchAPIPublicV1IncidentsByUserAckOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AckOrResolveResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIPublicV1IncidentsByUserAckBadRequest creates a PatchAPIPublicV1IncidentsByUserAckBadRequest with default headers values
func NewPatchAPIPublicV1IncidentsByUserAckBadRequest() *PatchAPIPublicV1IncidentsByUserAckBadRequest {
	return &PatchAPIPublicV1IncidentsByUserAckBadRequest{}
}

/*PatchAPIPublicV1IncidentsByUserAckBadRequest handles this case with default header values.

Problem with the request arguments.  The response payload may include an error message.
*/
type PatchAPIPublicV1IncidentsByUserAckBadRequest struct {
}

func (o *PatchAPIPublicV1IncidentsByUserAckBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api-public/v1/incidents/byUser/ack][%d] patchApiPublicV1IncidentsByUserAckBadRequest ", 400)
}

func (o *PatchAPIPublicV1IncidentsByUserAckBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchAPIPublicV1IncidentsByUserAckUnauthorized creates a PatchAPIPublicV1IncidentsByUserAckUnauthorized with default headers values
func NewPatchAPIPublicV1IncidentsByUserAckUnauthorized() *PatchAPIPublicV1IncidentsByUserAckUnauthorized {
	return &PatchAPIPublicV1IncidentsByUserAckUnauthorized{}
}

/*PatchAPIPublicV1IncidentsByUserAckUnauthorized handles this case with default header values.

Authentication parameters missing
*/
type PatchAPIPublicV1IncidentsByUserAckUnauthorized struct {
}

func (o *PatchAPIPublicV1IncidentsByUserAckUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api-public/v1/incidents/byUser/ack][%d] patchApiPublicV1IncidentsByUserAckUnauthorized ", 401)
}

func (o *PatchAPIPublicV1IncidentsByUserAckUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchAPIPublicV1IncidentsByUserAckForbidden creates a PatchAPIPublicV1IncidentsByUserAckForbidden with default headers values
func NewPatchAPIPublicV1IncidentsByUserAckForbidden() *PatchAPIPublicV1IncidentsByUserAckForbidden {
	return &PatchAPIPublicV1IncidentsByUserAckForbidden{}
}

/*PatchAPIPublicV1IncidentsByUserAckForbidden handles this case with default header values.

Authentication failed or rate-limit reached
*/
type PatchAPIPublicV1IncidentsByUserAckForbidden struct {
}

func (o *PatchAPIPublicV1IncidentsByUserAckForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api-public/v1/incidents/byUser/ack][%d] patchApiPublicV1IncidentsByUserAckForbidden ", 403)
}

func (o *PatchAPIPublicV1IncidentsByUserAckForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchAPIPublicV1IncidentsByUserAckNotFound creates a PatchAPIPublicV1IncidentsByUserAckNotFound with default headers values
func NewPatchAPIPublicV1IncidentsByUserAckNotFound() *PatchAPIPublicV1IncidentsByUserAckNotFound {
	return &PatchAPIPublicV1IncidentsByUserAckNotFound{}
}

/*PatchAPIPublicV1IncidentsByUserAckNotFound handles this case with default header values.

User not found
*/
type PatchAPIPublicV1IncidentsByUserAckNotFound struct {
}

func (o *PatchAPIPublicV1IncidentsByUserAckNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api-public/v1/incidents/byUser/ack][%d] patchApiPublicV1IncidentsByUserAckNotFound ", 404)
}

func (o *PatchAPIPublicV1IncidentsByUserAckNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchAPIPublicV1IncidentsByUserAckInternalServerError creates a PatchAPIPublicV1IncidentsByUserAckInternalServerError with default headers values
func NewPatchAPIPublicV1IncidentsByUserAckInternalServerError() *PatchAPIPublicV1IncidentsByUserAckInternalServerError {
	return &PatchAPIPublicV1IncidentsByUserAckInternalServerError{}
}

/*PatchAPIPublicV1IncidentsByUserAckInternalServerError handles this case with default header values.

Internal Server Error
*/
type PatchAPIPublicV1IncidentsByUserAckInternalServerError struct {
}

func (o *PatchAPIPublicV1IncidentsByUserAckInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api-public/v1/incidents/byUser/ack][%d] patchApiPublicV1IncidentsByUserAckInternalServerError ", 500)
}

func (o *PatchAPIPublicV1IncidentsByUserAckInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
