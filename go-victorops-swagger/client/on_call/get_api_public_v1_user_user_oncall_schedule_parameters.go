// Code generated by go-swagger; DO NOT EDIT.

package on_call

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetAPIPublicV1UserUserOncallScheduleParams creates a new GetAPIPublicV1UserUserOncallScheduleParams object
// with the default values initialized.
func NewGetAPIPublicV1UserUserOncallScheduleParams() *GetAPIPublicV1UserUserOncallScheduleParams {
	var (
		daysForwardDefault = float64(14)
		daysSkipDefault    = float64(0)
		stepDefault        = float64(0)
	)
	return &GetAPIPublicV1UserUserOncallScheduleParams{
		DaysForward: &daysForwardDefault,
		DaysSkip:    &daysSkipDefault,
		Step:        &stepDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetAPIPublicV1UserUserOncallScheduleParamsWithTimeout creates a new GetAPIPublicV1UserUserOncallScheduleParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetAPIPublicV1UserUserOncallScheduleParamsWithTimeout(timeout time.Duration) *GetAPIPublicV1UserUserOncallScheduleParams {
	var (
		daysForwardDefault = float64(14)
		daysSkipDefault    = float64(0)
		stepDefault        = float64(0)
	)
	return &GetAPIPublicV1UserUserOncallScheduleParams{
		DaysForward: &daysForwardDefault,
		DaysSkip:    &daysSkipDefault,
		Step:        &stepDefault,

		timeout: timeout,
	}
}

// NewGetAPIPublicV1UserUserOncallScheduleParamsWithContext creates a new GetAPIPublicV1UserUserOncallScheduleParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetAPIPublicV1UserUserOncallScheduleParamsWithContext(ctx context.Context) *GetAPIPublicV1UserUserOncallScheduleParams {
	var (
		daysForwardDefault = float64(14)
		daysSkipDefault    = float64(0)
		stepDefault        = float64(0)
	)
	return &GetAPIPublicV1UserUserOncallScheduleParams{
		DaysForward: &daysForwardDefault,
		DaysSkip:    &daysSkipDefault,
		Step:        &stepDefault,

		Context: ctx,
	}
}

// NewGetAPIPublicV1UserUserOncallScheduleParamsWithHTTPClient creates a new GetAPIPublicV1UserUserOncallScheduleParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetAPIPublicV1UserUserOncallScheduleParamsWithHTTPClient(client *http.Client) *GetAPIPublicV1UserUserOncallScheduleParams {
	var (
		daysForwardDefault = float64(14)
		daysSkipDefault    = float64(0)
		stepDefault        = float64(0)
	)
	return &GetAPIPublicV1UserUserOncallScheduleParams{
		DaysForward: &daysForwardDefault,
		DaysSkip:    &daysSkipDefault,
		Step:        &stepDefault,
		HTTPClient:  client,
	}
}

/*GetAPIPublicV1UserUserOncallScheduleParams contains all the parameters to send to the API endpoint
for the get API public v1 user user oncall schedule operation typically these are written to a http.Request
*/
type GetAPIPublicV1UserUserOncallScheduleParams struct {

	/*XVOAPIID
	  Your API ID

	*/
	XVOAPIID string
	/*XVOAPIKey
	  Your API Key

	*/
	XVOAPIKey string
	/*DaysForward
	  Days to include in returned schedule (30 max)

	*/
	DaysForward *float64
	/*DaysSkip
	  Days to skip before computing schedule to return (90 max)

	*/
	DaysSkip *float64
	/*Step
	  Step of escalation policy (3 max)

	*/
	Step *float64
	/*User
	  The VictorOps user ID

	*/
	User string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get API public v1 user user oncall schedule params
func (o *GetAPIPublicV1UserUserOncallScheduleParams) WithTimeout(timeout time.Duration) *GetAPIPublicV1UserUserOncallScheduleParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get API public v1 user user oncall schedule params
func (o *GetAPIPublicV1UserUserOncallScheduleParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get API public v1 user user oncall schedule params
func (o *GetAPIPublicV1UserUserOncallScheduleParams) WithContext(ctx context.Context) *GetAPIPublicV1UserUserOncallScheduleParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get API public v1 user user oncall schedule params
func (o *GetAPIPublicV1UserUserOncallScheduleParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get API public v1 user user oncall schedule params
func (o *GetAPIPublicV1UserUserOncallScheduleParams) WithHTTPClient(client *http.Client) *GetAPIPublicV1UserUserOncallScheduleParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get API public v1 user user oncall schedule params
func (o *GetAPIPublicV1UserUserOncallScheduleParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithXVOAPIID adds the xVOAPIID to the get API public v1 user user oncall schedule params
func (o *GetAPIPublicV1UserUserOncallScheduleParams) WithXVOAPIID(xVOAPIID string) *GetAPIPublicV1UserUserOncallScheduleParams {
	o.SetXVOAPIID(xVOAPIID)
	return o
}

// SetXVOAPIID adds the xVOApiId to the get API public v1 user user oncall schedule params
func (o *GetAPIPublicV1UserUserOncallScheduleParams) SetXVOAPIID(xVOAPIID string) {
	o.XVOAPIID = xVOAPIID
}

// WithXVOAPIKey adds the xVOAPIKey to the get API public v1 user user oncall schedule params
func (o *GetAPIPublicV1UserUserOncallScheduleParams) WithXVOAPIKey(xVOAPIKey string) *GetAPIPublicV1UserUserOncallScheduleParams {
	o.SetXVOAPIKey(xVOAPIKey)
	return o
}

// SetXVOAPIKey adds the xVOApiKey to the get API public v1 user user oncall schedule params
func (o *GetAPIPublicV1UserUserOncallScheduleParams) SetXVOAPIKey(xVOAPIKey string) {
	o.XVOAPIKey = xVOAPIKey
}

// WithDaysForward adds the daysForward to the get API public v1 user user oncall schedule params
func (o *GetAPIPublicV1UserUserOncallScheduleParams) WithDaysForward(daysForward *float64) *GetAPIPublicV1UserUserOncallScheduleParams {
	o.SetDaysForward(daysForward)
	return o
}

// SetDaysForward adds the daysForward to the get API public v1 user user oncall schedule params
func (o *GetAPIPublicV1UserUserOncallScheduleParams) SetDaysForward(daysForward *float64) {
	o.DaysForward = daysForward
}

// WithDaysSkip adds the daysSkip to the get API public v1 user user oncall schedule params
func (o *GetAPIPublicV1UserUserOncallScheduleParams) WithDaysSkip(daysSkip *float64) *GetAPIPublicV1UserUserOncallScheduleParams {
	o.SetDaysSkip(daysSkip)
	return o
}

// SetDaysSkip adds the daysSkip to the get API public v1 user user oncall schedule params
func (o *GetAPIPublicV1UserUserOncallScheduleParams) SetDaysSkip(daysSkip *float64) {
	o.DaysSkip = daysSkip
}

// WithStep adds the step to the get API public v1 user user oncall schedule params
func (o *GetAPIPublicV1UserUserOncallScheduleParams) WithStep(step *float64) *GetAPIPublicV1UserUserOncallScheduleParams {
	o.SetStep(step)
	return o
}

// SetStep adds the step to the get API public v1 user user oncall schedule params
func (o *GetAPIPublicV1UserUserOncallScheduleParams) SetStep(step *float64) {
	o.Step = step
}

// WithUser adds the user to the get API public v1 user user oncall schedule params
func (o *GetAPIPublicV1UserUserOncallScheduleParams) WithUser(user string) *GetAPIPublicV1UserUserOncallScheduleParams {
	o.SetUser(user)
	return o
}

// SetUser adds the user to the get API public v1 user user oncall schedule params
func (o *GetAPIPublicV1UserUserOncallScheduleParams) SetUser(user string) {
	o.User = user
}

// WriteToRequest writes these params to a swagger request
func (o *GetAPIPublicV1UserUserOncallScheduleParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// header param X-VO-Api-Id
	if err := r.SetHeaderParam("X-VO-Api-Id", o.XVOAPIID); err != nil {
		return err
	}

	// header param X-VO-Api-Key
	if err := r.SetHeaderParam("X-VO-Api-Key", o.XVOAPIKey); err != nil {
		return err
	}

	if o.DaysForward != nil {

		// query param daysForward
		var qrDaysForward float64
		if o.DaysForward != nil {
			qrDaysForward = *o.DaysForward
		}
		qDaysForward := swag.FormatFloat64(qrDaysForward)
		if qDaysForward != "" {
			if err := r.SetQueryParam("daysForward", qDaysForward); err != nil {
				return err
			}
		}

	}

	if o.DaysSkip != nil {

		// query param daysSkip
		var qrDaysSkip float64
		if o.DaysSkip != nil {
			qrDaysSkip = *o.DaysSkip
		}
		qDaysSkip := swag.FormatFloat64(qrDaysSkip)
		if qDaysSkip != "" {
			if err := r.SetQueryParam("daysSkip", qDaysSkip); err != nil {
				return err
			}
		}

	}

	if o.Step != nil {

		// query param step
		var qrStep float64
		if o.Step != nil {
			qrStep = *o.Step
		}
		qStep := swag.FormatFloat64(qrStep)
		if qStep != "" {
			if err := r.SetQueryParam("step", qStep); err != nil {
				return err
			}
		}

	}

	// path param user
	if err := r.SetPathParam("user", o.User); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
