// Code generated by go-swagger; DO NOT EDIT.

package on_call

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/erikvanbrakel/terraform-provider-victorops/go-victorops-swagger/models"
)

// PatchAPIPublicV1TeamTeamOncallUserReader is a Reader for the PatchAPIPublicV1TeamTeamOncallUser structure.
type PatchAPIPublicV1TeamTeamOncallUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PatchAPIPublicV1TeamTeamOncallUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPatchAPIPublicV1TeamTeamOncallUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPatchAPIPublicV1TeamTeamOncallUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPatchAPIPublicV1TeamTeamOncallUserUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPatchAPIPublicV1TeamTeamOncallUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPatchAPIPublicV1TeamTeamOncallUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPatchAPIPublicV1TeamTeamOncallUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPatchAPIPublicV1TeamTeamOncallUserOK creates a PatchAPIPublicV1TeamTeamOncallUserOK with default headers values
func NewPatchAPIPublicV1TeamTeamOncallUserOK() *PatchAPIPublicV1TeamTeamOncallUserOK {
	return &PatchAPIPublicV1TeamTeamOncallUserOK{}
}

/*PatchAPIPublicV1TeamTeamOncallUserOK handles this case with default header values.

The result of the take request
*/
type PatchAPIPublicV1TeamTeamOncallUserOK struct {
	Payload *models.TakeResult
}

func (o *PatchAPIPublicV1TeamTeamOncallUserOK) Error() string {
	return fmt.Sprintf("[PATCH /api-public/v1/team/{team}/oncall/user][%d] patchApiPublicV1TeamTeamOncallUserOK  %+v", 200, o.Payload)
}

func (o *PatchAPIPublicV1TeamTeamOncallUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.TakeResult)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPatchAPIPublicV1TeamTeamOncallUserBadRequest creates a PatchAPIPublicV1TeamTeamOncallUserBadRequest with default headers values
func NewPatchAPIPublicV1TeamTeamOncallUserBadRequest() *PatchAPIPublicV1TeamTeamOncallUserBadRequest {
	return &PatchAPIPublicV1TeamTeamOncallUserBadRequest{}
}

/*PatchAPIPublicV1TeamTeamOncallUserBadRequest handles this case with default header values.

Problem with the request arguments.  The response payload may include an error message.
*/
type PatchAPIPublicV1TeamTeamOncallUserBadRequest struct {
}

func (o *PatchAPIPublicV1TeamTeamOncallUserBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /api-public/v1/team/{team}/oncall/user][%d] patchApiPublicV1TeamTeamOncallUserBadRequest ", 400)
}

func (o *PatchAPIPublicV1TeamTeamOncallUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchAPIPublicV1TeamTeamOncallUserUnauthorized creates a PatchAPIPublicV1TeamTeamOncallUserUnauthorized with default headers values
func NewPatchAPIPublicV1TeamTeamOncallUserUnauthorized() *PatchAPIPublicV1TeamTeamOncallUserUnauthorized {
	return &PatchAPIPublicV1TeamTeamOncallUserUnauthorized{}
}

/*PatchAPIPublicV1TeamTeamOncallUserUnauthorized handles this case with default header values.

Authentication parameters missing
*/
type PatchAPIPublicV1TeamTeamOncallUserUnauthorized struct {
}

func (o *PatchAPIPublicV1TeamTeamOncallUserUnauthorized) Error() string {
	return fmt.Sprintf("[PATCH /api-public/v1/team/{team}/oncall/user][%d] patchApiPublicV1TeamTeamOncallUserUnauthorized ", 401)
}

func (o *PatchAPIPublicV1TeamTeamOncallUserUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchAPIPublicV1TeamTeamOncallUserForbidden creates a PatchAPIPublicV1TeamTeamOncallUserForbidden with default headers values
func NewPatchAPIPublicV1TeamTeamOncallUserForbidden() *PatchAPIPublicV1TeamTeamOncallUserForbidden {
	return &PatchAPIPublicV1TeamTeamOncallUserForbidden{}
}

/*PatchAPIPublicV1TeamTeamOncallUserForbidden handles this case with default header values.

Authentication failed or rate-limit reached
*/
type PatchAPIPublicV1TeamTeamOncallUserForbidden struct {
}

func (o *PatchAPIPublicV1TeamTeamOncallUserForbidden) Error() string {
	return fmt.Sprintf("[PATCH /api-public/v1/team/{team}/oncall/user][%d] patchApiPublicV1TeamTeamOncallUserForbidden ", 403)
}

func (o *PatchAPIPublicV1TeamTeamOncallUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchAPIPublicV1TeamTeamOncallUserNotFound creates a PatchAPIPublicV1TeamTeamOncallUserNotFound with default headers values
func NewPatchAPIPublicV1TeamTeamOncallUserNotFound() *PatchAPIPublicV1TeamTeamOncallUserNotFound {
	return &PatchAPIPublicV1TeamTeamOncallUserNotFound{}
}

/*PatchAPIPublicV1TeamTeamOncallUserNotFound handles this case with default header values.

Team or user(s) not found
*/
type PatchAPIPublicV1TeamTeamOncallUserNotFound struct {
}

func (o *PatchAPIPublicV1TeamTeamOncallUserNotFound) Error() string {
	return fmt.Sprintf("[PATCH /api-public/v1/team/{team}/oncall/user][%d] patchApiPublicV1TeamTeamOncallUserNotFound ", 404)
}

func (o *PatchAPIPublicV1TeamTeamOncallUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPatchAPIPublicV1TeamTeamOncallUserInternalServerError creates a PatchAPIPublicV1TeamTeamOncallUserInternalServerError with default headers values
func NewPatchAPIPublicV1TeamTeamOncallUserInternalServerError() *PatchAPIPublicV1TeamTeamOncallUserInternalServerError {
	return &PatchAPIPublicV1TeamTeamOncallUserInternalServerError{}
}

/*PatchAPIPublicV1TeamTeamOncallUserInternalServerError handles this case with default header values.

Internal Server Error
*/
type PatchAPIPublicV1TeamTeamOncallUserInternalServerError struct {
}

func (o *PatchAPIPublicV1TeamTeamOncallUserInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /api-public/v1/team/{team}/oncall/user][%d] patchApiPublicV1TeamTeamOncallUserInternalServerError ", 500)
}

func (o *PatchAPIPublicV1TeamTeamOncallUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
