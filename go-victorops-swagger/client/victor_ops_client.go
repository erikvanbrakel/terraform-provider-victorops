// Code generated by go-swagger; DO NOT EDIT.

package client

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/runtime"
	httptransport "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/erikvanbrakel/terraform-provider-victorops/go-victorops-swagger/client/alerts"
	"github.com/erikvanbrakel/terraform-provider-victorops/go-victorops-swagger/client/escalation_policies"
	"github.com/erikvanbrakel/terraform-provider-victorops/go-victorops-swagger/client/incidents"
	"github.com/erikvanbrakel/terraform-provider-victorops/go-victorops-swagger/client/on_call"
	"github.com/erikvanbrakel/terraform-provider-victorops/go-victorops-swagger/client/operations"
	"github.com/erikvanbrakel/terraform-provider-victorops/go-victorops-swagger/client/personal_paging_policies"
	"github.com/erikvanbrakel/terraform-provider-victorops/go-victorops-swagger/client/personal_paging_policy_values"
	"github.com/erikvanbrakel/terraform-provider-victorops/go-victorops-swagger/client/reporting"
	"github.com/erikvanbrakel/terraform-provider-victorops/go-victorops-swagger/client/routing_keys"
	"github.com/erikvanbrakel/terraform-provider-victorops/go-victorops-swagger/client/teams"
	"github.com/erikvanbrakel/terraform-provider-victorops/go-victorops-swagger/client/user_contact_methods"
	"github.com/erikvanbrakel/terraform-provider-victorops/go-victorops-swagger/client/user_paging_policies"
	"github.com/erikvanbrakel/terraform-provider-victorops/go-victorops-swagger/client/users"
)

// Default victor ops HTTP client.
var Default = NewHTTPClient(nil)

const (
	// DefaultHost is the default Host
	// found in Meta (info) section of spec file
	DefaultHost string = "api.victorops.com"
	// DefaultBasePath is the default BasePath
	// found in Meta (info) section of spec file
	DefaultBasePath string = "/"
)

// DefaultSchemes are the default schemes found in Meta (info) section of spec file
var DefaultSchemes = []string{"https"}

// NewHTTPClient creates a new victor ops HTTP client.
func NewHTTPClient(formats strfmt.Registry) *VictorOps {
	return NewHTTPClientWithConfig(formats, nil)
}

// NewHTTPClientWithConfig creates a new victor ops HTTP client,
// using a customizable transport config.
func NewHTTPClientWithConfig(formats strfmt.Registry, cfg *TransportConfig) *VictorOps {
	// ensure nullable parameters have default
	if cfg == nil {
		cfg = DefaultTransportConfig()
	}

	// create transport and client
	transport := httptransport.New(cfg.Host, cfg.BasePath, cfg.Schemes)
	return New(transport, formats)
}

// New creates a new victor ops client
func New(transport runtime.ClientTransport, formats strfmt.Registry) *VictorOps {
	// ensure nullable parameters have default
	if formats == nil {
		formats = strfmt.Default
	}

	cli := new(VictorOps)
	cli.Transport = transport

	cli.Alerts = alerts.New(transport, formats)

	cli.EscalationPolicies = escalation_policies.New(transport, formats)

	cli.Incidents = incidents.New(transport, formats)

	cli.OnCall = on_call.New(transport, formats)

	cli.Operations = operations.New(transport, formats)

	cli.PersonalPagingPolicies = personal_paging_policies.New(transport, formats)

	cli.PersonalPagingPolicyValues = personal_paging_policy_values.New(transport, formats)

	cli.Reporting = reporting.New(transport, formats)

	cli.RoutingKeys = routing_keys.New(transport, formats)

	cli.Teams = teams.New(transport, formats)

	cli.UserContactMethods = user_contact_methods.New(transport, formats)

	cli.UserPagingPolicies = user_paging_policies.New(transport, formats)

	cli.Users = users.New(transport, formats)

	return cli
}

// DefaultTransportConfig creates a TransportConfig with the
// default settings taken from the meta section of the spec file.
func DefaultTransportConfig() *TransportConfig {
	return &TransportConfig{
		Host:     DefaultHost,
		BasePath: DefaultBasePath,
		Schemes:  DefaultSchemes,
	}
}

// TransportConfig contains the transport related info,
// found in the meta section of the spec file.
type TransportConfig struct {
	Host     string
	BasePath string
	Schemes  []string
}

// WithHost overrides the default host,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithHost(host string) *TransportConfig {
	cfg.Host = host
	return cfg
}

// WithBasePath overrides the default basePath,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithBasePath(basePath string) *TransportConfig {
	cfg.BasePath = basePath
	return cfg
}

// WithSchemes overrides the default schemes,
// provided by the meta section of the spec file.
func (cfg *TransportConfig) WithSchemes(schemes []string) *TransportConfig {
	cfg.Schemes = schemes
	return cfg
}

// VictorOps is a client for victor ops
type VictorOps struct {
	Alerts *alerts.Client

	EscalationPolicies *escalation_policies.Client

	Incidents *incidents.Client

	OnCall *on_call.Client

	Operations *operations.Client

	PersonalPagingPolicies *personal_paging_policies.Client

	PersonalPagingPolicyValues *personal_paging_policy_values.Client

	Reporting *reporting.Client

	RoutingKeys *routing_keys.Client

	Teams *teams.Client

	UserContactMethods *user_contact_methods.Client

	UserPagingPolicies *user_paging_policies.Client

	Users *users.Client

	Transport runtime.ClientTransport
}

// SetTransport changes the transport on the client and all its subresources
func (c *VictorOps) SetTransport(transport runtime.ClientTransport) {
	c.Transport = transport

	c.Alerts.SetTransport(transport)

	c.EscalationPolicies.SetTransport(transport)

	c.Incidents.SetTransport(transport)

	c.OnCall.SetTransport(transport)

	c.Operations.SetTransport(transport)

	c.PersonalPagingPolicies.SetTransport(transport)

	c.PersonalPagingPolicyValues.SetTransport(transport)

	c.Reporting.SetTransport(transport)

	c.RoutingKeys.SetTransport(transport)

	c.Teams.SetTransport(transport)

	c.UserContactMethods.SetTransport(transport)

	c.UserPagingPolicies.SetTransport(transport)

	c.Users.SetTransport(transport)

}
