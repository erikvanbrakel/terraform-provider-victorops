// Code generated by go-swagger; DO NOT EDIT.

package teams

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/erikvanbrakel/terraform-provider-victorops/go-victorops-swagger/models"
)

// PutAPIPublicV1TeamTeamReader is a Reader for the PutAPIPublicV1TeamTeam structure.
type PutAPIPublicV1TeamTeamReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutAPIPublicV1TeamTeamReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewPutAPIPublicV1TeamTeamOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutAPIPublicV1TeamTeamBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewPutAPIPublicV1TeamTeamUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutAPIPublicV1TeamTeamForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewPutAPIPublicV1TeamTeamNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 422:
		result := NewPutAPIPublicV1TeamTeamUnprocessableEntity()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewPutAPIPublicV1TeamTeamInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutAPIPublicV1TeamTeamOK creates a PutAPIPublicV1TeamTeamOK with default headers values
func NewPutAPIPublicV1TeamTeamOK() *PutAPIPublicV1TeamTeamOK {
	return &PutAPIPublicV1TeamTeamOK{}
}

/*PutAPIPublicV1TeamTeamOK handles this case with default header values.

Some details about the team that was added
*/
type PutAPIPublicV1TeamTeamOK struct {
	Payload *models.AddTeamResponse
}

func (o *PutAPIPublicV1TeamTeamOK) Error() string {
	return fmt.Sprintf("[PUT /api-public/v1/team/{team}][%d] putApiPublicV1TeamTeamOK  %+v", 200, o.Payload)
}

func (o *PutAPIPublicV1TeamTeamOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.AddTeamResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewPutAPIPublicV1TeamTeamBadRequest creates a PutAPIPublicV1TeamTeamBadRequest with default headers values
func NewPutAPIPublicV1TeamTeamBadRequest() *PutAPIPublicV1TeamTeamBadRequest {
	return &PutAPIPublicV1TeamTeamBadRequest{}
}

/*PutAPIPublicV1TeamTeamBadRequest handles this case with default header values.

Problem with the request arguments.  The response payload may include an error message.
*/
type PutAPIPublicV1TeamTeamBadRequest struct {
}

func (o *PutAPIPublicV1TeamTeamBadRequest) Error() string {
	return fmt.Sprintf("[PUT /api-public/v1/team/{team}][%d] putApiPublicV1TeamTeamBadRequest ", 400)
}

func (o *PutAPIPublicV1TeamTeamBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAPIPublicV1TeamTeamUnauthorized creates a PutAPIPublicV1TeamTeamUnauthorized with default headers values
func NewPutAPIPublicV1TeamTeamUnauthorized() *PutAPIPublicV1TeamTeamUnauthorized {
	return &PutAPIPublicV1TeamTeamUnauthorized{}
}

/*PutAPIPublicV1TeamTeamUnauthorized handles this case with default header values.

Authentication parameters missing
*/
type PutAPIPublicV1TeamTeamUnauthorized struct {
}

func (o *PutAPIPublicV1TeamTeamUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /api-public/v1/team/{team}][%d] putApiPublicV1TeamTeamUnauthorized ", 401)
}

func (o *PutAPIPublicV1TeamTeamUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAPIPublicV1TeamTeamForbidden creates a PutAPIPublicV1TeamTeamForbidden with default headers values
func NewPutAPIPublicV1TeamTeamForbidden() *PutAPIPublicV1TeamTeamForbidden {
	return &PutAPIPublicV1TeamTeamForbidden{}
}

/*PutAPIPublicV1TeamTeamForbidden handles this case with default header values.

Authentication failed or rate-limit reached
*/
type PutAPIPublicV1TeamTeamForbidden struct {
}

func (o *PutAPIPublicV1TeamTeamForbidden) Error() string {
	return fmt.Sprintf("[PUT /api-public/v1/team/{team}][%d] putApiPublicV1TeamTeamForbidden ", 403)
}

func (o *PutAPIPublicV1TeamTeamForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAPIPublicV1TeamTeamNotFound creates a PutAPIPublicV1TeamTeamNotFound with default headers values
func NewPutAPIPublicV1TeamTeamNotFound() *PutAPIPublicV1TeamTeamNotFound {
	return &PutAPIPublicV1TeamTeamNotFound{}
}

/*PutAPIPublicV1TeamTeamNotFound handles this case with default header values.

Team not found
*/
type PutAPIPublicV1TeamTeamNotFound struct {
}

func (o *PutAPIPublicV1TeamTeamNotFound) Error() string {
	return fmt.Sprintf("[PUT /api-public/v1/team/{team}][%d] putApiPublicV1TeamTeamNotFound ", 404)
}

func (o *PutAPIPublicV1TeamTeamNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAPIPublicV1TeamTeamUnprocessableEntity creates a PutAPIPublicV1TeamTeamUnprocessableEntity with default headers values
func NewPutAPIPublicV1TeamTeamUnprocessableEntity() *PutAPIPublicV1TeamTeamUnprocessableEntity {
	return &PutAPIPublicV1TeamTeamUnprocessableEntity{}
}

/*PutAPIPublicV1TeamTeamUnprocessableEntity handles this case with default header values.

Team name or email is unavailable, or you have reached your team limit.

*/
type PutAPIPublicV1TeamTeamUnprocessableEntity struct {
}

func (o *PutAPIPublicV1TeamTeamUnprocessableEntity) Error() string {
	return fmt.Sprintf("[PUT /api-public/v1/team/{team}][%d] putApiPublicV1TeamTeamUnprocessableEntity ", 422)
}

func (o *PutAPIPublicV1TeamTeamUnprocessableEntity) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutAPIPublicV1TeamTeamInternalServerError creates a PutAPIPublicV1TeamTeamInternalServerError with default headers values
func NewPutAPIPublicV1TeamTeamInternalServerError() *PutAPIPublicV1TeamTeamInternalServerError {
	return &PutAPIPublicV1TeamTeamInternalServerError{}
}

/*PutAPIPublicV1TeamTeamInternalServerError handles this case with default header values.

Internal Server Error
*/
type PutAPIPublicV1TeamTeamInternalServerError struct {
}

func (o *PutAPIPublicV1TeamTeamInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /api-public/v1/team/{team}][%d] putApiPublicV1TeamTeamInternalServerError ", 500)
}

func (o *PutAPIPublicV1TeamTeamInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
